id: income
namespace: phillycrime
description: |
  Flow to grab philadelphia income data by zipcode 

 
variables:
  output_name: "philly_income.csv"
  gcs_file: "gs://{{kv('GCP_BUCKET_NAME')}}/{{vars.output_name}}"
  table: "{{kv('GCP_DATASET')}}.philly_income"


tasks:
  - id: set_label
    type: io.kestra.plugin.core.execution.Labels
    labels:
      file: "{{render(vars.output_name)}}"

    # Download the table using pandas
  - id: extract
    type: io.kestra.plugin.scripts.python.Script
    outputFiles:
      - '{{render(vars.output_name)}}'
    taskRunner:
      type: io.kestra.plugin.core.runner.Process
    warningOnStdErr: false
    beforeCommands:
    - pip install pandas lxml
    script: | 
      import pandas as pd
      import re
      url = 'https://zipatlas.com/us/pa/philadelphia/zip-code-comparison/highest-median-household-income.htm'

      df = pd.read_html(url)[0]
      df = df.drop(columns=['Unnamed: 0', 'vs State','vs National'])
      df['Household Income'] = df['Household Income'].replace('[\$,]', '', regex=True).astype(float)

      df = df.rename(columns={'Zip Code': 'zip', 'Household Income': 'income'})
      
      df.to_csv('{{render(vars.output_name)}}', index=False)

  - id: upload_gcs
    type: io.kestra.plugin.gcp.gcs.Upload
    from: "{{outputs.extract.outputFiles[render(vars.output_name)]}}"
    to: "{{render(vars.gcs_file)}}"

   # Create the BQ table that will hold final data
  - id: bq_income
    type: io.kestra.plugin.gcp.bigquery.Query
    sql: |
          LOAD DATA OVERWRITE phillycrime.philly_crime_db.income
          (
            zip INTEGER OPTIONS(description='Represents zipcode')
            ,income NUMERIC OPTIONS(description='Represents median income for thie corresponding zipcode')
          )
          FROM FILES (
            skip_leading_rows=1,
            format = 'CSV',
            uris = ['{{render(vars.gcs_file)}}']);


  - id: purge_files
    type: io.kestra.plugin.core.storage.PurgeCurrentExecutionFiles

    # Delete bucket after use 
  - id: delete
    type: io.kestra.plugin.gcp.gcs.Delete
    uri: gs://{{kv('GCP_BUCKET_NAME')}}/{{render(vars.output_name)}}

pluginDefaults:
  - type: io.kestra.plugin.gcp
    values:
      serviceAccount: "{{kv('GCP_CREDS')}}"
      projectId: "{{kv('GCP_PROJECT_ID')}}"
      location: "{{kv('GCP_LOCATION')}}"
      bucket: "{{kv('GCP_BUCKET_NAME')}}"



