id: crime_schedule
namespace: phillycrime
description: |
  Flow to grab philadelphia crime data from open data philly website every day. 

inputs:
    # Input to specify the year
  - id: year
    type: SELECT
    displayName: Select year
    values: ['2006', '2007', '2008', '2009' , '2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020', '2021', '2022', '2023', '2024', '2025']
    defaults: "2025"
  
variables:
  base_url_post: 'https://phl.carto.com/api/v2/sql?filename=incidents_part1_part2&format=csv&q=SELECT%20*%20,%20ST_Y(the_geom)%20AS%20lat,%20ST_X(the_geom)%20AS%20lng%20FROM%20incidents_part1_part2%20WHERE%20dispatch_date_time%20%3E=%20%27'  
  base_url_pre: 'https://phl.carto.com/api/v2/sql?filename=incidents_part1_part2&format=csv&skipfields=cartodb_id,the_geom,the_geom_webmercator&q=SELECT%20*%20,%20ST_Y(the_geom)%20AS%20lat,%20ST_X(the_geom)%20AS%20lng%20FROM%20incidents_part1_part2%20WHERE%20dispatch_date_time%20%3E=%20%27'
  mid_url: '-01-01%27%20AND%20dispatch_date_time%20%3C%20%27'
  end_url: '-01-01%27'
  full_url_post: "{{vars.base_url_post}}{{inputs.year}}{{vars.mid_url}}{{inputs.year | number + 1}}{{vars.end_url}}"
  full_url_pre: "{{vars.base_url_pre}}{{inputs.year}}{{vars.mid_url}}{{inputs.year | number + 1}}{{vars.end_url}}"
  output_name: "crime_{{inputs.year}}.csv"
  gcs_file: "gs://{{kv('GCP_BUCKET_NAME')}}/{{vars.output_name}}"
  table: "{{kv('GCP_DATASET')}}.Crime_{{inputs.year}}"
  data_post: "{{outputs.extractpost.outputFiles['crime_'~inputs.year~'.csv']}}"
  data_pre: "{{outputs.extractpre.outputFiles['crime_'~inputs.year~'.csv']}}"

tasks:
  - id: set_label
    type: io.kestra.plugin.core.execution.Labels
    labels:
      file: "{{render(vars.full_url_post)}}"

    # Check if >= 2020
  - id: if_post_2020
    type: io.kestra.plugin.core.flow.If
    condition: "{{inputs.year | number >= 2020}}"
    then:
    # Task to download the crime csv file 
    - id: extractpost
      type: io.kestra.plugin.scripts.shell.Commands
      outputFiles:
        - "*.csv"
      taskRunner:
        type: io.kestra.plugin.core.runner.Process
      commands:
        - curl -o {{render(vars.output_name)}} -L '{{render(vars.full_url_post)}}' 
    - id: upload_gcs_post
      type: io.kestra.plugin.gcp.gcs.Upload
      from: "{{render(vars.data_post)}}"
      to: "{{render(vars.gcs_file)}}"


  - id: if_pre_2020
    type: io.kestra.plugin.core.flow.If
    condition: "{{inputs.year | number < 2020}}"
    then:
    # Task to download the crime csv file 
    - id: extractpre
      type: io.kestra.plugin.scripts.shell.Commands
      outputFiles:
        - "*.csv"
      taskRunner:
        type: io.kestra.plugin.core.runner.Process
      commands:
        - curl -o {{render(vars.output_name)}} -L '{{render(vars.full_url_pre)}}' 

    - id: upload_gcs_pre
      type: io.kestra.plugin.gcp.gcs.Upload
      from: "{{render(vars.data_pre)}}"
      to: "{{render(vars.gcs_file)}}"       

# upload to gcs, create big query final table, bq external table, bq temp table, merge temp into final 

  - id: purge_files
    type: io.kestra.plugin.core.storage.PurgeCurrentExecutionFiles

pluginDefaults:
  - type: io.kestra.plugin.gcp
    values:
      serviceAccount: "{{kv('GCP_CREDS')}}"
      projectId: "{{kv('GCP_PROJECT_ID')}}"
      location: "{{kv('GCP_LOCATION')}}"
      bucket: "{{kv('GCP_BUCKET_NAME')}}"